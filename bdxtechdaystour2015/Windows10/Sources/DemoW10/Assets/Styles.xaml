<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<!--THEME DICTIONARIES OVERRIDE-->
	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Dark">
			<SolidColorBrush x:Key="TextSelectionHighlightColorThemeBrush"
							 Color="#FFFCB80D" />

		</ResourceDictionary>
		<ResourceDictionary x:Key="Light">
			<SolidColorBrush x:Key="TextSelectionHighlightColorThemeBrush"
							 Color="#FFFCB80D" />
			<SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush"
							 Color="DarkGray" />
			<SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush"
							 Color="LightGray" />
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<!--BRUSHES-->
	<SolidColorBrush x:Key="NavButtonPressedBackgroundBrush"
					 Color="White"
					 Opacity="0.3" />
	<SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush"
					 Color="Black"
					 Opacity="0.8" />
	<SolidColorBrush x:Key="NavButtonHoverBackgroundBrush"
					 Color="White"
					 Opacity="0.2" />

	<SolidColorBrush x:Key="HamburgerButtonPressedBackgroundBrush"
					 Color="White"
					 Opacity="0.3" />
	<SolidColorBrush x:Key="HamburgerButtonHoverBackgroundBrush"
					 Color="White"
					 Opacity="0.1" />

	<!--STYLES-->
	<!--NAV RADIOBUTTON STYLE-->
	<Style x:Key="NavRadioButtonStyle"
		   TargetType="RadioButton">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="Black" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="Height"
				Value="56" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Border x:Name="RootGrid"
							BorderBrush="{TemplateBinding BorderBrush}"
							Margin="0,0,0,0"
							BorderThickness="{TemplateBinding BorderThickness}"
							Visibility="{TemplateBinding Visibility}"
							Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
																	   Storyboard.TargetName="BackgroundGrid">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{StaticResource NavButtonHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
																	   Storyboard.TargetName="BackgroundGrid">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{StaticResource NavButtonPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>

										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 Storyboard.TargetName="rectangle" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="BackgroundGrid"
							  Background="Transparent"
							  VerticalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="48" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<TextBlock x:Name="IconBlock"
									   FontSize="26"
									   Height="26"
									   Margin="10,10,0,10"
									   Text="{TemplateBinding Tag}"
									   Foreground="{TemplateBinding Foreground}"
									   FontFamily="Segoe MDL2 Assets"
									   VerticalAlignment="Center"
									   TextAlignment="Center" />
							<ContentPresenter Margin="20,0,0,0"
											  x:Name="ContentPresenter"
											  Foreground="{TemplateBinding Foreground}"
											  AutomationProperties.AccessibilityView="Raw"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  Content="{TemplateBinding Content}"
											  Grid.Column="1"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  TextWrapping="Wrap"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							<Rectangle x:Name="rectangle"
									   Fill="{StaticResource NavButtonCheckedBackgroundBrush}"
									   HorizontalAlignment="Left"
									   Width="4"
									   Opacity="0" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--HAMBURGER BUTTON STYLE-->
	<Style x:Key="HamburgerButtonStyle"
		   TargetType="Button">
		<Setter Property="Background"
				Value="#FF97D6D7" />
		<Setter Property="Foreground"
				Value="Black" />
		<Setter Property="Padding"
				Value="3" />
		<Setter Property="Height"
				Value="56" />
		<Setter Property="Width"
				Value="56" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ContentBorder"
								Background="Transparent"
								VerticalAlignment="Stretch">
							<TextBlock FontSize="26"
									   Text="&#xE700;"
									   Foreground="{TemplateBinding Foreground}"
									   FontFamily="Segoe MDL2 Assets"
									   TextAlignment="Center"
									   VerticalAlignment="Center" />
						</Border>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--NAV BACKBUTTON STYLE-->
	<Style x:Key="NavigationBackButtonStyle"
		   TargetType="Button"
		   BasedOn="{StaticResource NavigationBackButtonNormalStyle}">
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Height"
				Value="48" />
		<Setter Property="Width"
				Value="NaN" />
		<Setter Property="MinWidth"
				Value="48" />
		<Setter Property="AutomationProperties.Name"
				Value="Back" />
		<Setter Property="Content">
			<Setter.Value>
				<Grid x:Name="RootGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="48" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<FontIcon x:Name="Glyph"
							  Grid.Column="0"
							  FontSize="16"
							  Height="26"
							  Margin="10,10,0,10"
							  Glyph="&#xE0D5;"
							  MirroredWhenRightToLeft="True"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center" />
					<TextBlock x:Name="Text"
							   Grid.Column="1"
							   Style="{ThemeResource BodyTextBlockStyle}"
							   Text="Back"
							   VerticalAlignment="Center"
							   Margin="20,0,0,0" />
				</Grid>
			</Setter.Value>
		</Setter>
	</Style>

	<!--LISTVIEWITEM STYLE (to fix horizontal alignment bug)-->
	<Style TargetType="ListViewItem">
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
	</Style>

</ResourceDictionary>
